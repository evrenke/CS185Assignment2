Script started on 2021-10-02 08:26:05+00:00 [TERM="xterm" TTY="/dev/pts/0" COLUMNS="161" LINES="23"]

/// QUESTION 1: Unique customer ids, product ids and titles
/// These 3 commands take the relevant field columns, and count unique values of each field.
/// We can see from the first value of each output the results:
/// 1502381 unique customer ids
/// 779734 unique product ids
/// 713712 unique product titles
/// Interestingly there are more ids than titles for products, meaning some products are the same item, sold different ways

]0;keskin@f6linux6: ~keskin@f6linux6:~$ cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq | wc
1502381 1502381 13521432
]0;keskin@f6linux6: ~keskin@f6linux6:~$ cut -f 4 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq | wc
 779734  779734 8577074
]0;keskin@f6linux6: ~keskin@f6linux6:~$ cut -f 6 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq | wc
 713712 5374199 35188981

/// QUESTION 2: Selecting 100 customers with multiple reviews
/// For getting 100 ID's and ensuring that they have multiple reviews
/// These piped commands choose the top 100 most reviewing customers ID's
/// First, the ID's are placed into a file called 'customerIDs.txt'
/// This cuts only the ID's column, and uses sort and uniq with count flag '-c' to get the numbers of reviews
/// Then these numbers are sorted, and used to get the 100 top ID's
/// Next this file is used to create a new file as ID number '.txt'
/// And the review and helpfulness scores from fields 8 and 9 are cut into these files

]0;keskin@f6linux6: ~keskin@f6linux6:~$ touch customerIDs.txt
]0;keskin@f6linux6: ~keskin@f6linux6:~$ cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100 > customerIDs.txt
/// NOTE: An incorrect attempt that used echo's of ID's was cut here, to lower spam on the file you are reading
]0;keskin@f6linux6: ~keskin@f6linux6:~$ mkdir CUSTOMERS
]0;keskin@f6linux6: ~keskin@f6linux6:~$ mkdir PRODCU[K[KUCTS
/// NOTE: Another echo using command with spam was cut here
]0;keskin@f6linux6: ~keskin@f6linux6:~$ input="customerIDs.txt"; while read -r line; do awk -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 8,9 > "CUSTOMERS/$line.txt"; done < "$input"

/// QUESTION 3: Selecting 100 product ID's that have multiple reviews
/// The same process for question 2 was used, but with selections for field 4; the product ID column
/// The file used in this case was 'productIDs.txt'

]0;keskin@f6linux6: ~keskin@f6linux6:~$ touch productIDs.txt
]0;keskin@f6linux6: ~keskin@f6linux6:~$ cut -f 4 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}'| head -n 100 > productIDs.txt
]0;keskin@f6linux6: ~keskin@f6linux6:~$ input="productIDs.txt"; while read -r line; do awk -v "ID=$line" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 8,9 > "PRODUCTS/$line.txt"; done < "$input"

/// QUESTION 4: Alias command 'l'
/// This question requires creating a customized alias command
/// The command is "l", and its a shortcut for a larger command "ls -latr"
/// It's a one line answer

]0;keskin@f6linux6: ~keskin@f6linux6:~$ alias l="ls -latr"

/// QUESTION 5: Alias command 'w'
/// This is similar to question 4, and this command gets the count of files in a directory
/// The command is "w", and its a shortcut for a larger command "ls -la | wc"
/// It's a one line answer

]0;keskin@f6linux6: ~keskin@f6linux6:~$ alias w="ls -la | wc"

/// QUESTION 6: Placing alias commands in .bashrc file
/// .bashrc is a file that holds permanent aliases
/// We can place the single line commands used into this file
/// and they will be executed when a console session starts, so the aliases are always available

/// NOTE: I had already placed the aliases before scripting these commands
/// but the output below does show that they are already in .bashrc

]0;keskin@f6linux6: ~keskin@f6linux6:~$ vim ~/.bashrc
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;23r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[23;1H"~/.bashrc" 117L, 3792C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;5H[33malias [m[36mfgrep[m[33m='[m[31mfgrep --color=auto[m[33m'
[m    [33malias [m[36megrep[m[33m='[m[31megrep --color=auto[m[33m'
fi[m

[34m# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases[m
[33malias [m[36mll[m[33m='[m[31mls -alF[m[33m'
alias [m[36mla[m[33m='[m[31mls -A[m[33m'

/// THE INSERTED ALIASES ARE HERE

alias[m [36mw[m=[33m'[m[31mls -la|wc[m[33m'
alias[m [36ml[m=[33m'[m[31mls -latr[m[33m'[m
[34m# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert[m
[33malias [m[36malert[m[33m='[m[31mnotify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e [m[33m'[m[35m\'[m[33m'[m[31ms/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//[m[33m'[m[35m\'[m[33m''[m[16;1H[31m)"[m[33m'[m

[34m# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.[m[23;144H93,19[9C85%[11;19H[?25h[?25l[23;134H:[11;19H[23;1H[K[23;1H:[?2004h[?25hx
[?25l[?2004l[23;2t[23;1t[23;1H[K[23;1H[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;
keskin@f6linux6: ~

/// QUESTION 7: Verifying customer ID file counts
/// We can use the alias command "w" from question 5 to answer this question
/// Going into both CUSTOMERS and PRODUCTS directories and using the "w"
/// Shows both directories have 103 files
/// 100 of those is the generated 
/// The other 3 are utility files used by the Linux OS

keskin@f6linux6:~$ cd CUSTOMERsS[K[KS
]0;keskin@f6linux6: ~/CUSTOMERSkeskin@f6linux6:~/CUSTOMERS$ w
    103     920    6109
]0;keskin@f6linux6: ~/CUSTOMERSkeskin@f6linux6:~/CUSTOMERS$ cd
]0;keskin@f6linux6: ~keskin@f6linux6:~$ cd PRODUCS[KTS
]0;keskin@f6linux6: ~/PRODUCTSkeskin@f6linux6:~/PRODUCTS$ w
    103     920    6309
]0;keskin@f6linux6: ~/PRODUCTSkeskin@f6linux6:~/PRODUCTS$ cd

/// QUESTION 8: Correlation scores of reviews and helpfulness per customer
/// NOTE: Datamash was already installed before scripting, the installation was messy so its cleaner without the spam
/// We can use datamash commands ppearson option to find correlation between two given fields
/// This is perfect for finding review and helpfulness correlation ratios for all customers
/// I also test this functionality by making a "c.txt" file, filled with two columns of all equal values
/// The result from that should be 1, and is 1
/// The customer scores are shown below, a few have "nan" scores but most have a real number value

]0;keskin@f6linux6: ~keskin@f6linux6:~$ for i in {1..1000} ; do echo $i $i ;done >> c.txt
]0;keskin@f6linux6: ~keskin@f6linux6:~$ datamash-1.3/datamash  -W ppearson 1:2 < c.txt
1

//NOTE: These are failed attempts with incorrect directories for datamash and CUSTOMERS files
]0;keskin@f6linux6: ~keskin@f6linux6:~$ for FILE in ../CUSTOMERS/*; do echo "$FILE"; ./datamash  -W ppearson 1:2 <  "$FILE" ; done
../CUSTOMERS/*
bash: ../CUSTOMERS/*: No such file or directory
]0;keskin@f6linux6: ~keskin@f6linux6:~$ for FILE in CUSTOMERS/*; do echo "$FILE"; ./datamash  -W ppearson 1:2 <  "$FILE" ; done
/// REMOVED 100 COMPLAINTS OF "file not found"
]0;keskin@f6linux6: ~keskin@f6linux6:~$ for FILE in CUSTOMERS/*; do echo "$FILE"; datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" ; done
CUSTOMERS/20595117.txt
-0.07801434074194
CUSTOMERS/30559999.txt
0.21345504736868
CUSTOMERS/35004134.txt
0.055309254263891
CUSTOMERS/35985708.txt
-0.018475208724832
CUSTOMERS/36642996.txt
0.014465514553815
CUSTOMERS/38491967.txt
0.17020566472814
CUSTOMERS/38672733.txt
0.12121827988843
CUSTOMERS/39134375.txt
0.10005442649664
CUSTOMERS/39569598.txt
0.032994743885822
CUSTOMERS/41012519.txt
0.17200338503861
CUSTOMERS/42800127.txt
0.089102917317791
CUSTOMERS/43546353.txt
0.098881392684532
CUSTOMERS/45041039.txt
0.18720273660608
CUSTOMERS/45193257.txt
0.021132515307758
CUSTOMERS/45273033.txt
0.092359619529125
CUSTOMERS/45284807.txt
0.1384713883907
CUSTOMERS/46134316.txt
0.14278679881351
CUSTOMERS/46983871.txt
0.0053203252670871
CUSTOMERS/49042814.txt
0.040504842491862
CUSTOMERS/49115690.txt
0.068202332403585
CUSTOMERS/49148452.txt
0.059734436987131
CUSTOMERS/49202417.txt
0.18318449848793
CUSTOMERS/49273674.txt
0.1023365975441
CUSTOMERS/49355567.txt
0.084133214894678
CUSTOMERS/49447323.txt
0.13851838267659
CUSTOMERS/49693975.txt
0.11816888546413
CUSTOMERS/49750558.txt
0.16415290612614
CUSTOMERS/49786731.txt
0.11669140003769
CUSTOMERS/49992211.txt
0.1106744637466
CUSTOMERS/50057481.txt
0.15381696183264
CUSTOMERS/50068216.txt
0.040208873642215
CUSTOMERS/50122160.txt
0.0079500705902259
CUSTOMERS/50199793.txt
0.043764675851012
CUSTOMERS/50378566.txt
0.1301622379244
CUSTOMERS/50389232.txt
0.019539896441349
CUSTOMERS/50592435.txt
0.068444026754028
CUSTOMERS/50608834.txt
0.06205993708533
CUSTOMERS/50652563.txt
0.067986415610439
CUSTOMERS/50702879.txt
0.12783864743466
CUSTOMERS/50732546.txt
0.13504126608126
CUSTOMERS/50736950.txt
-0.013727796992368
CUSTOMERS/50761804.txt
0.062595527593946
CUSTOMERS/50774468.txt
0.088830355194399
CUSTOMERS/50776149.txt
-0.0061448727026488
CUSTOMERS/50881246.txt
0.027029386976794
CUSTOMERS/50895620.txt
nan
CUSTOMERS/50913245.txt
0.090116904917308
CUSTOMERS/50941451.txt
0.0049250944457509
CUSTOMERS/51010391.txt
0.10743206757669
CUSTOMERS/51065232.txt
0.013752013650581
CUSTOMERS/51110953.txt
0.055831605020071
CUSTOMERS/51142763.txt
0.041677792338704
CUSTOMERS/51145127.txt
0.087893540376544
CUSTOMERS/51147790.txt
0.046537167012795
CUSTOMERS/51199159.txt
0.12504985186374
CUSTOMERS/51210331.txt
0.12678688007083
CUSTOMERS/51243012.txt
0.06835179616414
CUSTOMERS/51247650.txt
0.060609415951821
CUSTOMERS/51325095.txt
0.086940729395386
CUSTOMERS/51379338.txt
0.12578151587695
CUSTOMERS/51809405.txt
0.11875456413314
CUSTOMERS/51915884.txt
0.14176373240007
CUSTOMERS/51917998.txt
0.022448391180586
CUSTOMERS/51934027.txt
0.13503774269188
CUSTOMERS/51987970.txt
0.051486636075274
CUSTOMERS/52008531.txt
0.017811475726488
CUSTOMERS/52012289.txt
0.18492316019033
CUSTOMERS/52173832.txt
0.10237932118738
CUSTOMERS/52223435.txt
-0.0026349289854177
CUSTOMERS/52254603.txt
0.073176446680375
CUSTOMERS/52266433.txt
0.013724947082216
CUSTOMERS/52447634.txt
0.062000110385039
CUSTOMERS/52476938.txt
0.055596837865367
CUSTOMERS/52496677.txt
0.18251371784434
CUSTOMERS/52500542.txt
0.18154880963794
CUSTOMERS/52517734.txt
0.11983203571544
CUSTOMERS/52564468.txt
0.16328542608749
CUSTOMERS/52615377.txt
0.030740558705146
CUSTOMERS/52697458.txt
-0.14252275828471
CUSTOMERS/52706646.txt
0.025110761126103
CUSTOMERS/52753467.txt
0.066920372977256
CUSTOMERS/52774618.txt
0.13275129539799
CUSTOMERS/52793250.txt
0.0049836076293453
CUSTOMERS/52797744.txt
0.050037786797692
CUSTOMERS/52830980.txt
0.16537943284871
CUSTOMERS/52845727.txt
0.074886220771932
CUSTOMERS/52894384.txt
0.044626136926622
CUSTOMERS/52938698.txt
0.15008944716725
CUSTOMERS/52947077.txt
0.062737374957511
CUSTOMERS/52966385.txt
-0.071306253746504
CUSTOMERS/53008075.txt
0.15857132700717
CUSTOMERS/53009736.txt
0.16544324685575
CUSTOMERS/53016962.txt
0.16760279939147
CUSTOMERS/53037408.txt
0.043727709187369
CUSTOMERS/53047425.txt
0.19913465813733
CUSTOMERS/53052943.txt
0.10589722686895
CUSTOMERS/53071109.txt
0.031330315464942
CUSTOMERS/53072811.txt
0.085940719734639
CUSTOMERS/53082946.txt
0.098723957624567
CUSTOMERS/53084107.txt
0.059862926995826

/// QUESTION 9: Average helpfulness scores of per customer, and min and max
/// We can use datamash again, but with the "mean" option to find the mean average of helpfulness scores
/// Specifying column 2 from the files gives helpfulness, and the resulting averages are shown below
/// The lowest average is on lines 376 and 377. 
/// Customer 49202417 with an average of 2.6730506155951 helpfulness scores
/// People just dont like 49202417
/// On the other hand, the highest average is on lines 350 and 351.
/// Customer 38672733 with an average of 57.232 helpfulness scores
/// No one else is even close to 38672733. They're just such a helpful guy you know

]0;keskin@f6linux6: ~keskin@f6linux6:~$ for FILE in CUSTOMERS/*; do echo "$FILE";  datamash-1.3/datamash mean 2 < "$FILE" ; done
CUSTOMERS/20595117.txt
7.1284236153378
CUSTOMERS/30559999.txt
8.8612716763006
CUSTOMERS/35004134.txt
13.552166934189
CUSTOMERS/35985708.txt
3.2395833333333
CUSTOMERS/36642996.txt
10.679230769231
CUSTOMERS/38491967.txt
6.7709580838323
CUSTOMERS/38672733.txt
6.1598639455782
CUSTOMERS/39134375.txt
57.232
CUSTOMERS/39569598.txt
21.175847457627
CUSTOMERS/41012519.txt
9.4377828054299
CUSTOMERS/42800127.txt
2.9108280254777
CUSTOMERS/43546353.txt
19.062311557789
CUSTOMERS/45041039.txt
3.9900677200903
CUSTOMERS/45193257.txt
17.067064083458
CUSTOMERS/45273033.txt
6.38532675709
CUSTOMERS/45284807.txt
10.321252059308
CUSTOMERS/46134316.txt
8.6849757673667
CUSTOMERS/46983871.txt
11.376132930514
CUSTOMERS/49042814.txt
10.110701107011
CUSTOMERS/49115690.txt
4.871945259042
CUSTOMERS/49148452.txt
21.328125
CUSTOMERS/49202417.txt
2.6730506155951
CUSTOMERS/49273674.txt
15.132075471698
CUSTOMERS/49355567.txt
14.799270072993
CUSTOMERS/49447323.txt
9.125890736342
CUSTOMERS/49693975.txt
4.9739884393064
CUSTOMERS/49750558.txt
5.9478764478764
CUSTOMERS/49786731.txt
38.169369369369
CUSTOMERS/49992211.txt
10.494102228047
CUSTOMERS/50057481.txt
25.132553606238
CUSTOMERS/50068216.txt
7.4453360080241
CUSTOMERS/50122160.txt
6.1275431073807
CUSTOMERS/50199793.txt
18.372670807453
CUSTOMERS/50378566.txt
5.0856643356643
CUSTOMERS/50389232.txt
11.089416058394
CUSTOMERS/50592435.txt
10.172077922078
CUSTOMERS/50608834.txt
6.1073558648111
CUSTOMERS/50652563.txt
4.3911290322581
CUSTOMERS/50702879.txt
19.044247787611
CUSTOMERS/50732546.txt
5.8508631071859
CUSTOMERS/50736950.txt
3.3103448275862
CUSTOMERS/50761804.txt
33.479094076655
CUSTOMERS/50774468.txt
9.4242749731472
CUSTOMERS/50776149.txt
12.468002225932
CUSTOMERS/50881246.txt
16.565320665083
CUSTOMERS/50895620.txt
25.975155279503
CUSTOMERS/50913245.txt
11.389137737962
CUSTOMERS/50941451.txt
20.161961367013
CUSTOMERS/51010391.txt
10.682389937107
CUSTOMERS/51065232.txt
13.359416445623
CUSTOMERS/51110953.txt
4.6906077348066
CUSTOMERS/51142763.txt
14.26170212766
CUSTOMERS/51145127.txt
6.830303030303
CUSTOMERS/51147790.txt
20.217871485944
CUSTOMERS/51199159.txt
4.6361829025845
CUSTOMERS/51210331.txt
11.744268077601
CUSTOMERS/51243012.txt
10.266197183099
CUSTOMERS/51247650.txt
34.662358642973
CUSTOMERS/51325095.txt
5.2415812591508
CUSTOMERS/51379338.txt
30.760401721664
CUSTOMERS/51809405.txt
13.641285956007
CUSTOMERS/51915884.txt
5.2160148975791
CUSTOMERS/51917998.txt
14.634556574924
CUSTOMERS/51934027.txt
12.950268817204
CUSTOMERS/51987970.txt
16.347449470645
CUSTOMERS/52008531.txt
8.8241106719368
CUSTOMERS/52012289.txt
41.68237704918
CUSTOMERS/52173832.txt
21.113744075829
CUSTOMERS/52223435.txt
9.8100840336134
CUSTOMERS/52254603.txt
9.0621225194133
CUSTOMERS/52266433.txt
18.533742331288
CUSTOMERS/52447634.txt
41.818011257036
CUSTOMERS/52476938.txt
12.095846645367
CUSTOMERS/52496677.txt
11.967346938776
CUSTOMERS/52500542.txt
37.236013986014
CUSTOMERS/52517734.txt
12.264656616415
CUSTOMERS/52564468.txt
12.080291970803
CUSTOMERS/52615377.txt
28.086336336336
CUSTOMERS/52697458.txt
21.616182572614
CUSTOMERS/52706646.txt
8.7898193760263
CUSTOMERS/52753467.txt
17.415517241379
CUSTOMERS/52774618.txt
9.7482993197279
CUSTOMERS/52793250.txt
13.012941176471
CUSTOMERS/52797744.txt
8.5847880299252
CUSTOMERS/52830980.txt
12.196765498652
CUSTOMERS/52845727.txt
5.7558139534884
CUSTOMERS/52894384.txt
6.6443037974684
CUSTOMERS/52938698.txt
14.800687285223
CUSTOMERS/52947077.txt
11.728489483748
CUSTOMERS/52966385.txt
11.273764258555
CUSTOMERS/53008075.txt
3.5326251896813
CUSTOMERS/53009736.txt
9.962481962482
CUSTOMERS/53016962.txt
26.352507374631
CUSTOMERS/53037408.txt
14.030694668821
CUSTOMERS/53047425.txt
26.923714759536
CUSTOMERS/53052943.txt
18.594704684318
CUSTOMERS/53071109.txt
12.844911147011
CUSTOMERS/53072811.txt
11.515021459227
CUSTOMERS/53082946.txt
19.401534526854
CUSTOMERS/53084107.txt
15.277410832232

/// QUESTION 10: Average review scores of per product, and min and max
/// Similar to the calculations for question 9, we can find average review scores for products
/// This score is in a smaller range, since all reviews scores are between 1 and 5
/// Still we can see all average review scores below
/// The lowest reviewed product is on lines 594 and 595.
/// Product 0312864590 has an average review score of 1.6867945823928
/// Just avoid this product at all costs really
/// The highest reviewd product is on lines 648 and 649
/// Product 0439136350 has an amazing average review score of 4.8400868306802
/// This is near a perfect score of 5, which is really good considering that these are the highest reviewed products

]0;keskin@f6linux6: ~keskin@f6linux6:~$ for FILE in PRODUCTS/*; do echo "$FILE";  datamash-1.3/datamash mean 1 < "$FILE"; done
PRODUCTS/0060193395.txt
4.2006033182504
PRODUCTS/0060392452.txt
3.5944841675179
PRODUCTS/0060514558.txt
3.0402193784278
PRODUCTS/0060582510.txt
3.7601870407482
PRODUCTS/0060761288.txt
3.088467614534
PRODUCTS/0060763957.txt
3.3507340946166
PRODUCTS/0060875410.txt
3.1633986928105
PRODUCTS/0060928336.txt
3.9746268656716
PRODUCTS/0060930535.txt
4.0951248513674
PRODUCTS/0060938455.txt
4.2822902796272
PRODUCTS/0060987103.txt
3.9497041420118
PRODUCTS/0062502182.txt
4.0393835616438
PRODUCTS/0066214130.txt
3.2879045996593
PRODUCTS/0140177396.txt
4.3064250411862
PRODUCTS/014028009X.txt
4.0254545454545
PRODUCTS/014131088X.txt
4.5742574257426
PRODUCTS/0142001740.txt
4.0093708165997
PRODUCTS/0156027321.txt
4.1252699784017
PRODUCTS/0310205719.txt
3.7220708446866
PRODUCTS/0312195516.txt
4.2082901554404
PRODUCTS/0312278586.txt
3.6650124069479
PRODUCTS/0312857691.txt
2.7530017152659
PRODUCTS/0312864256.txt
3.3156596794081
PRODUCTS/0312864590.txt
1.6867945823928
PRODUCTS/0316011770.txt
3.2593220338983
PRODUCTS/0316601950.txt
3.2109777015437
PRODUCTS/0316666343.txt
3.800395256917
PRODUCTS/0316769487.txt
4.0793433652531
PRODUCTS/0345340426.txt
4.6567717996289
PRODUCTS/0345342968.txt
4.1085526315789
PRODUCTS/0345417623.txt
3.7326732673267
PRODUCTS/0374332657.txt
4.6767317939609
PRODUCTS/0375826688.txt
3.5904404873477
PRODUCTS/038529929X.txt
2.9181518151815
PRODUCTS/0385335482.txt
4.3528455284553
PRODUCTS/0385337116.txt
2.5088607594937
PRODUCTS/0385484518.txt
4.4181152790485
PRODUCTS/0385497466.txt
2.6344238975818
PRODUCTS/038550120X.txt
3.8033613445378
PRODUCTS/0385504209.txt
3.4787151702786
PRODUCTS/0393317552.txt
3.9284403669725
PRODUCTS/0399142789.txt
3.9085631349782
PRODUCTS/0399144463.txt
3.0954128440367
PRODUCTS/039914563X.txt
2.5114795918367
PRODUCTS/039915079X.txt
2.2485207100592
PRODUCTS/0399150897.txt
1.9025210084034
PRODUCTS/0399501487.txt
3.8668779714739
PRODUCTS/0425198243.txt
2.4833040421793
PRODUCTS/0439064864.txt
4.7532679738562
PRODUCTS/0439136350.txt
4.8400868306802
PRODUCTS/0439139597.txt
4.7758759026478
PRODUCTS/043935806X.txt
4.3943783783784
PRODUCTS/0439784549.txt
4.2397660818713
PRODUCTS/0440212561.txt
4.4436493738819
PRODUCTS/0440219078.txt
4.3789893617021
PRODUCTS/0440414806.txt
4.6577840112202
PRODUCTS/0446310786.txt
4.581514762516
PRODUCTS/044652252X.txt
4.6956834532374
PRODUCTS/0446532231.txt
3.5233291298865
PRODUCTS/0446608955.txt
4.4080944350759
PRODUCTS/0446672211.txt
4.290282902829
PRODUCTS/0446677450.txt
3.644262295082
PRODUCTS/0449004023.txt
4.2654028436019
PRODUCTS/0451191145.txt
3.9077134986226
PRODUCTS/0451524934.txt
4.6244725738397
PRODUCTS/0451526341.txt
4.4125874125874
PRODUCTS/0525947647.txt
3.8495873968492
PRODUCTS/0553272535.txt
4.3207547169811
PRODUCTS/0553375407.txt
4.1592128801431
PRODUCTS/0553573403.txt
4.4751693002257
PRODUCTS/0590353403.txt
4.7865595942519
PRODUCTS/059035342X.txt
4.6615969581749
PRODUCTS/0609610597.txt
2.3896551724138
PRODUCTS/0671021001.txt
4.0550161812298
PRODUCTS/0671025368.txt
4.7171581769437
PRODUCTS/0671027344.txt
4.5074798619102
PRODUCTS/0671027360.txt
3.7791666666667
PRODUCTS/0671524313.txt
3.8244837758112
PRODUCTS/0679444815.txt
3.455121436114
PRODUCTS/0679735771.txt
3.5154494382022
PRODUCTS/0679781587.txt
4.3280334728033
PRODUCTS/0684801523.txt
4.1835016835017
PRODUCTS/068484267X.txt
4.447504302926
PRODUCTS/0689817851.txt
4.3067669172932
PRODUCTS/0743222245.txt
3.1266891891892
PRODUCTS/0785263535.txt
3.3107142857143
PRODUCTS/0786868716.txt
3.9102005231037
PRODUCTS/0812511816.txt
3.9865410497981
PRODUCTS/0812548051.txt
3.7874396135266
PRODUCTS/0812550706.txt
4.580204778157
PRODUCTS/0842329129.txt
3.8342165026495
PRODUCTS/0895260174.txt
3.4481835564054
PRODUCTS/0895261901.txt
3.7240853658537
PRODUCTS/0971453209.txt
3.382271468144
PRODUCTS/0975599518.txt
2.876772082879
PRODUCTS/1400046610.txt
3.3941798941799
PRODUCTS/1400050308.txt
2.966573816156
PRODUCTS/1558743669.txt
4.6385416666667
PRODUCTS/1576734587.txt
3.364990689013
PRODUCTS/1594480001.txt
4.5138036809816
]0;keskin@f6linux6: ~keskin@f6linux6:~$ exit

Script done on 2021-10-02 09:02:20+00:00 [COMMAND_EXIT_CODE="0"]
