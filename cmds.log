NOTE: First 89 lines of tries and lines 119-133 of taking command log history
have been deleted to better format the command log

   90  cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq | wc
   91  cut -f 4 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq | wc
   92  cut -f 6 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq | wc 
   93  touch customerIDs.txt
   94  cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100 > customerIDs.txt
   95  input="customerIDs.txt"; while read -r line; do echo $line; awk -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 8,9 > "CUSTOMERS/$line.txt"; done < "$input"
   96  mkdir CUSTOMERS
   97  mkdir PRODUCTS
   98  input="customerIDs.txt"; while read -r line; do echo $line; awk -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 8,9 > "CUSTOMERS/$line.txt"; done < "$input"
   99  input="customerIDs.txt"; while read -r line; do awk -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 8,9 > "CUSTOMERS/$line.txt"; done < "$input"
  100  touch productIDs.txt
  101  cut -f 4 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}'| head -n 100 > productIDs.txt
  102  input="productIDs.txt"; while read -r line; do awk -v "ID=$line" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 8,9 > "PRODUCTS/$line.txt"; done < "$input"
  103  alias l="ls -latr"
  104  alias w="ls -la | wc"
  105  vim ~/.bashrc
  106  cd CUSTOMERS
  107  w
  108  cd
  109  cd PRODUCTS
  110  w
  111  cd
  112  for i in {1..1000} ; do echo $i $i ;done >> c.txt
  113  datamash-1.3/datamash  -W ppearson 1:2 < c.txt
  114  for FILE in ../CUSTOMERS/*; do echo "$FILE"; ./datamash  -W ppearson 1:2 <  "$FILE" ; done
  115  for FILE in CUSTOMERS/*; do echo "$FILE"; ./datamash  -W ppearson 1:2 <  "$FILE" ; done
  116  for FILE in CUSTOMERS/*; do echo "$FILE"; datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" ; done
  117  for FILE in CUSTOMERS/*; do echo "$FILE";  datamash-1.3/datamash mean 2 < "$FILE" ; done
  118  for FILE in PRODUCTS/*; do echo "$FILE";  datamash-1.3/datamash mean 1 < "$FILE"; done

